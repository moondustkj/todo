{"version":3,"sources":["components/Login/Login.css","components/UI/Input/Input.css","components/TodoList/TodoList.css","hoc/Auxiliary.css","App.css","components/InputField/InputField.css","components/UI/Spinner/Spinner.css","components/ListItems/ListItems.css","hoc/Auxiliary.js","components/InputField/InputField.js","components/ListItems/ListItems.js","store/actions/auth.js","store/actions/actionTypes.js","components/TodoList/TodoList.js","components/UI/Input/Input.js","components/UI/Spinner/Spinner.js","components/Login/Login.js","App.js","serviceWorker.js","store/reducers/authReducer.js","index.js"],"names":["module","exports","login","heading","btn","Input","Label","InputElement","Invalid","fa-list","logout","Box","Loader","load1","tasks","iconCircle","edit","delete","checkBoxContainer","checkBoxContianer","checkmark","mycheck","pencil","auxiliary","props","react_default","a","createElement","className","classes","children","inputField","type","onChange","change","onKeyPress","pressed","value","listItems","clas","clas1","clas2","list","react_fontawesome_index_es","icon","faTimesCircle","join","onClick","clicked","isEdited","faPlus","faPencilAlt","wantToEdit","InputField_InputField","authSuccess","token","userId","name","idToken","userName","localStorage","removeItem","checkAuthTimeout","expiretimeout","dispatch","setTimeout","TodoList","state","text","editedText","items","empty","inputHandler","event","preventDefault","_this","setState","target","editInputHandler","addHandler","concat","Object","toConsumableArray","deleteHandler","index","updatedItems","splice","enterHandler","keyCode","which","editHandler","id","item","_this2","this","map","itm","ListItems_ListItems","key","enter","console","log","onLogout","disabled","React","Component","connect","auth","actions","input","inputElement","inputClass","invalid","shouldValidate","touched","push","elementtype","assign","elementconfig","changed","options","optn","displayValue","label","spinner","Login","controls","placeholder","email","validation","required","isEmail","valid","password","minLength","isSignUp","switchAuthModeHandler","prevState","changeHandler","controlName","updatedControls","objectSpread","checkValidity","submitHandler","onAuth","building","authRedirectPath","onSetRedirectPath","rules","isValid","trim","length","maxLength","test","isNumeric","formElements","i","config","form","el","Input_Input","errMessage","error","message","loading","Spinner_Spinner","authRedirect","isAuthenticated","react_router","to","onSubmit","returnSecureToken","url","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","path","App","routes","exact","component","hoc_Auxiliary","Boolean","window","location","hostname","match","initialState","authReducer","arguments","undefined","action","composeEnhancers","compose","rootReducer","combineReducers","myStore","createStore","applyMiddleware","thunk","app","es","store","react_router_dom","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf271f80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login__login__2yZAa\",\"heading\":\"Login__heading__2E6UO\",\"btn\":\"Login__btn__32atD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fa-list\":\"TodoList__fa-list__3Vzu8\",\"logout\":\"TodoList__logout__OGUNU\",\"btn\":\"TodoList__btn__JYwyL\",\"Box\":\"TodoList__Box__2wQdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Auxiliary__Box__1vemP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"App__Box__1UqFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"InputField__Input__1dF23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__3dgUo\",\"load1\":\"Spinner__load1__3JQ2Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks\":\"ListItems__tasks__1j6nU\",\"iconCircle\":\"ListItems__iconCircle__3mnaP\",\"edit\":\"ListItems__edit__2O5Lw\",\"delete\":\"ListItems__delete__3KWPX\",\"checkBoxContainer\":\"ListItems__checkBoxContainer__2dl10\",\"checkBoxContianer\":\"ListItems__checkBoxContianer__1aZ80\",\"checkmark\":\"ListItems__checkmark__3214Q\",\"mycheck\":\"ListItems__mycheck__3ohfy\",\"pencil\":\"ListItems__pencil__2nJPJ\"};","import React from 'react';\r\nimport classes from './Auxiliary.css';\r\n\r\nconst auxiliary = (props) => {\r\n  return (\r\n    <div className= {classes.Box}>{props.children}</div>\r\n  )\r\n}\r\n\r\nexport default auxiliary;","import React from 'react';\r\nimport classes from'./InputField.css';\r\n\r\nconst inputField = (props) => {\r\n  return (\r\n    <input className= {classes.Input}\r\n    type=\"text\"\r\n     onChange= {props.change}\r\n     onKeyPress= {props.pressed}\r\n     value= {props.value}/>\r\n  )\r\n}\r\n\r\nexport default inputField;","import React from 'react';\r\nimport classes from './ListItems.css';\r\nimport InputField from '../InputField/InputField';\r\nimport { faTimesCircle, faPencilAlt, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst listItems = (props) => {\r\n\tconst clas= [classes.iconCircle, classes.delete];\r\n\tconst clas1= [classes.iconCircle, classes.edit];\r\n\tconst clas2= [classes.iconCircle, classes.pencil];\r\n  return (\r\n    <ul className= {classes.list}>\r\n    \t<li>\r\n    \t\t<label className= {classes.checkBoxContainer}>\r\n    \t\t\t<input type= \"checkbox\"/>\r\n    \t\t\t<span className= {classes.checkmark}></span>\r\n    \t\t</label>\r\n    \t\t<span className= {classes.tasks}>{props.tasks}</span>\r\n    \t\t<FontAwesomeIcon icon={faTimesCircle} \r\n    \t\t\tclassName= {clas.join(' ')}\r\n    \t\t\tonClick= {props.clicked}/>\r\n    \t\t{props.isEdited ? \r\n    \t\t\t<FontAwesomeIcon icon= {faPlus}\r\n    \t\t\t\tclassName= {clas2.join(' ')}\r\n    \t\t\t\tonClick= {props.edit}/>:\r\n    \t\t\t<FontAwesomeIcon icon={faPencilAlt} \r\n    \t\t\tclassName= {clas1.join(' ')}\r\n    \t\t\tonClick= {props.edit}/>}\r\n    \t\t\t\t<br/> \r\n    \t\t{props.wantToEdit ? <InputField change= {props.change}/> : null}\r\n    \t</li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default listItems;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart= () =>{\r\n\treturn{\r\n\t\ttype: actionTypes.AUTH_START\r\n\t};\r\n};\r\nexport const authFail= (error) =>{\r\n\treturn{\r\n\t\ttype: actionTypes.AUTH_FAIL,\r\n\t\terror: error\r\n\t};\r\n};\r\nexport const authSuccess= (token, userId, name) =>{\r\n\treturn{\r\n\t\ttype: actionTypes.AUTH_SUCCESS,\r\n\t\tidToken: token,\r\n\t\tuserId: userId,\r\n\t\tuserName: name\r\n\t};\r\n};\r\nexport const logout= () =>{\r\n\tlocalStorage.removeItem('token');\r\n\tlocalStorage.removeItem('expirationDate');\r\n\treturn{\r\n\t\ttype: actionTypes.AUTH_LOGOUT\r\n\t};\r\n};\r\nexport const checkAuthTimeout= (expiretimeout) =>{\r\n\treturn dispatch =>{\r\n\t\tsetTimeout(()=>{\r\n\t\t\tdispatch(logout());\r\n\t\t}, expiretimeout * 1000)\r\n\t}\r\n}\r\nexport const auth= (email, password, isSignUp, name) =>{\r\n\treturn dispatch =>{\r\n\t\tdispatch(authStart());\r\n\t\tconst form= {\r\n\t\t\temail: email, password: password, returnSecureToken: true\r\n\t\t};\r\n\r\n\t\tlet url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyCtGqLgE7bTFbggFwRuAjpmW92NbAbz8Co';\r\n\t\tif(!isSignUp)\r\n\t\t\turl= 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyCtGqLgE7bTFbggFwRuAjpmW92NbAbz8Co';\r\n\t\taxios.post(url, form)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log(response);\r\n\t\t\tconst expirationDate= new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n\t\t\tlocalStorage.setItem('token', response.data.idToken);\r\n\t\t\tlocalStorage.setItem('userName', name);\r\n\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\r\n\t\t\tlocalStorage.setItem('userId', response.data.localId);\r\n\t\t\tdispatch(authSuccess(response.data.idToken, response.data.localId, name));\r\n\t\t\tdispatch(checkAuthTimeout(response.data.expiresIn));\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tdispatch(authFail(err.response.data.error));\r\n\t\t});\r\n\t};\r\n};\r\nexport const authCheckState= () =>{\r\n\treturn dispatch =>{\r\n\t\tconst token= localStorage.getItem('token');\r\n\t\tif(!token)\r\n\t\t\tdispatch(logout());\r\n\t\telse{\r\n\t\t\tconst expirationDate= new Date(localStorage.getItem('expirationDate'));\r\n\t\t\tif(expirationDate <= new Date())\r\n\t\t\t\tdispatch(logout());\r\n\t\t\telse{\r\n\t\t\t\tconst userId= localStorage.getItem('userId');\r\n\t\t\t\tdispatch(authSuccess(token, userId));\r\n\t\t\t\tdispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nexport const setAuthRedirectPath= (path) =>{\r\n\treturn {\r\n\t\ttype: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n\t\tpath: path\r\n\t};\r\n};","export const AUTH_START= 'AUTH_START';\r\nexport const AUTH_SUCCESS= 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL= 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT= 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH= 'SET_AUTH_REDIRECT_PATH';\r\nexport const AUTH_CHECK_STATE= 'AUTH_CHECK_STATE';","import React from 'react';\r\nimport InputField from '../InputField/InputField';\r\nimport ListItems from '../ListItems/ListItems';\r\nimport { connect } from 'react-redux';\r\nimport classes from './TodoList.css';\r\nimport *as actions from '../../store/actions/index';\r\nclass TodoList extends React.Component {\r\n\t  state= {\r\n    text:'',\r\n    editedText: '',\r\n    items: [], \r\n    empty: true,\r\n    wantToEdit: false\r\n  };\r\n  inputHandler= (event) =>{\r\n    event.preventDefault();\r\n    this.setState({\r\n      text: event.target.value,\r\n      empty: false\r\n      });\r\n  }\r\n  editInputHandler= (event) =>{\r\n    event.preventDefault();\r\n    this.setState({\r\n      editedText: event.target.value,\r\n      empty: false\r\n      });\r\n  }\r\n  addHandler= () =>{\r\n    this.setState({\r\n      text:'',\r\n      items: [...this.state.items, this.state.text],\r\n      empty: true\r\n    });\r\n  }\r\n  deleteHandler= (index) =>{\r\n    const updatedItems= [...this.state.items];\r\n    updatedItems.splice(index, 1);\r\n    this.setState({\r\n      items: updatedItems\r\n    });\r\n  }\r\n  enterHandler= (event) =>{\r\n    const e= event.keyCode || event.which;\r\n    if(e === 13 && !this.state.empty){\r\n      this.setState({\r\n      text:'',\r\n      empty:true,\r\n      items: [...this.state.items, this.state.text]\r\n    });\r\n    }\r\n  }    \r\n  editHandler= (id)=>{\r\n    const updatedItems= [...this.state.items];\r\n    updatedItems.splice(id,1, this.state.editedText);\r\n    this.setState({\r\n      items: updatedItems,\r\n      text:'',\r\n      wantToEdit: !this.state.wantToEdit\r\n    });\r\n  }\r\n\trender() {\r\n\t\tlet item= null;\r\n    \titem= (\r\n\t      this.state.items.map((itm, index) => {\r\n\t        return <ListItems tasks= {itm} \r\n\t        key= {index}\r\n          edit= {()=>this.editHandler(index)}\r\n          change= {this.editInputHandler}\r\n          wantToEdit= {this.state.wantToEdit}\r\n          enter= {this.enterHandler}\r\n          isEdited= {this.state.wantToEdit}\r\n\t        clicked= {() => this.deleteHandler(index)}/>\r\n\t      })\r\n      \t);\r\n      console.log(this.state.editedText);\r\n\t\treturn (\r\n\t\t\t<div>\r\n        <button onClick= {this.props.onLogout}\r\n          className= {classes.logout}>LogOut</button><br/>\r\n\t\t\t\t<h1>Todo list app</h1>\r\n        <span>Welcome {this.props.userName}</span><br/>\r\n\t\t\t\t<InputField change= {this.inputHandler} \r\n              value= {this.state.text}\r\n              pressed= {this.enterHandler}/>\r\n              <button disabled= {this.state.empty} \r\n                onClick= {this.addHandler}\r\n                className= {classes.btn}>add</button>\r\n                {item}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps= state =>{\r\n  return{\r\n    userName: state.auth.userName\r\n  };\r\n};\r\nconst mapDispatchToProps= dispatch =>{\r\n  return{\r\n    onLogout: ()=> dispatch(actions.logout())\r\n  }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodoList);\r\n\r\n","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n  let inputElement= null;\r\n  const inputClass= [classes.InputElement];\r\n  if(props.invalid && props.shouldValidate && props.touched){\r\n  \tinputClass.push(classes.Invalid);\r\n  }\r\n  switch(props.elementtype){\r\n  \tcase('input'):\r\n  \t\tinputElement= <input className= {inputClass.join('')} \r\n  \t\t{...props.elementconfig}\r\n  \t\tvalue= {props.value}\r\n  \t\tonChange= {props.changed}\r\n  \t\t />;\r\n  \t\tbreak;\r\n  \tcase('email'):\r\n  \t\tinputElement= <input className= {inputClass.join('')}\r\n  \t\t {...props.elementconfig}\r\n  \t\t value= {props.value}\r\n  \t\t onChange= {props.changed}\r\n  \t\t  />;\r\n  \t\tbreak;\r\n  \tcase('textarea'):\r\n  \t\tinputElement= <textarea className= {inputClass.join('')}\r\n  \t\t {...props}\r\n  \t\t value= {props.value}\r\n  \t\t onChange= {props.changed}\r\n  \t\t  />\r\n  \t\tbreak;\r\n  \tcase('select'):\r\n  \t\tinputElement= <select className= {inputClass.join('')}\r\n  \t\t {...props}\r\n  \t\t value= {props.value}\r\n  \t\t >\r\n  \t\t\t{props.elementconfig.options.map(optn => (\r\n  \t\t\t\t<option key= {optn.value}\r\n  \t\t\t\t\tvalue= {optn.value}>{optn.displayValue}</option>\r\n  \t\t\t))}console.log(optn.value);\r\n  \t\t</select>\r\n  \t\tbreak;\r\n  \tdefault:\r\n  \t\tinputElement= <input className= {inputClass.join('')} {...props} value= {props.value} />\r\n  }\r\n  return (\r\n    <div className= {classes.Input}>\r\n    \t<label className= {classes.Label}>{props.label}</label>\r\n    \t{inputElement}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default input;","import React from 'react';\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = (props) => {\r\n  return (\r\n    <div className= {classes.Loader}> Loading....</div>\r\n  )\r\n}\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {connect} from 'react-redux';\r\nimport classes from './Login.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Login extends Component{\r\n\tstate= {\r\n\t\tcontrols:{\r\n\t\t\tuserName: {\r\n\t\t\telementtype: 'input',\r\n\t\t\telementconfig: {\r\n\t\t\t\ttype: 'text', placeholder: 'enter your UserName'\r\n\t\t\t},\r\n\t\t    value: 'o',\r\n\t    \ttouched: false\r\n\t\t\t},\r\n\t\t\temail: {\r\n\t\t\telementtype: 'input',\r\n\t\t\telementconfig: {\r\n\t\t\t\ttype: 'email', placeholder: 'enter your email'\r\n\t\t\t},\r\n\t\t    value: '',\r\n\t\t    validation: {\r\n\t\t    \trequired: true,\r\n\t\t    \tisEmail: true\r\n\t\t    },\r\n\t\t    \tvalid: false,\r\n\t\t    \ttouched: false\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\telementtype: 'input',\r\n\t\t\telementconfig: {\r\n\t\t\t\ttype: 'password', placeholder: 'enter your password'\r\n\t\t\t},\r\n\t\t    value: '',\r\n\t\t    validation: {\r\n\t\t    \trequired: true,\r\n\t\t    \tminLength: 7\r\n\t\t    },\r\n\t\t    \tvalid: false,\r\n\t\t    \ttouched: false\r\n\t\t\t},\r\n\t\t},\r\n\t\tisSignUp: true\r\n\t};\r\n\tcomponentDidMount(){\r\n\t\tif(!this.props.building && this.props.authRedirectPath !== '/')\r\n\t\t\tthis.props.onSetRedirectPath();\r\n\t}\r\n\tcheckValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n    switchAuthModeHandler= () =>{\r\n    \tthis.setState( prevState => {\r\n    \t\treturn{isSignUp: !prevState.isSignUp}    \t\t\r\n    \t});\r\n    };\r\n\tchangeHandler= (event, controlName)=>{\r\n\t\tconst updatedControls= {\r\n\t\t\t...this.state.controls\r\n\t\t};\r\n\t\tupdatedControls[controlName]= {\r\n\t\t\t...this.state.controls[controlName],\r\n\t\t\tvalue: event.target.value,\r\n\t\t\tvalid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n\t\t\ttouched: true\r\n\t\t};\r\n\t\tthis.setState({controls: updatedControls});\t\t\r\n\t};\r\n\tsubmitHandler= (event) =>{\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp, this.state.controls.userName.value);\r\n\t}\r\n\trender() {\r\n\t\tconst formElements= [];\r\n\t\tfor(let i in this.state.controls){\r\n\t\t\tformElements.push({\r\n\t\t\t\tid: i,\r\n\t\t\t\tconfig: this.state.controls[i]\r\n\t\t\t})\r\n\t\t};\r\n\t\tlet form = formElements.map(el => (\r\n\t\t\t\t\t\t<Input key= {el.id}\r\n\t\t\t\t\t\t\telementtype= {el.config.elementtype}\r\n\t\t\t\t\t\t\telementconfig= {el.config.elementconfig}\r\n\t\t\t\t\t\t\tinvalid= {!el.config.valid}\r\n\t\t\t\t\t\t\tshouldValidate= {el.config.validation}\r\n\t\t\t\t\t\t\ttouched= {el.config.touched}\r\n\t\t\t\t\t\t\tchanged= {(event) =>this.changeHandler(event, el.id)}/>\r\n\t\t\t\t\t));\r\n\t\tlet errMessage= null;\r\n\t\tif(this.props.error)\r\n\t\t\terrMessage= (\r\n\t\t\t\t<p>{this.props.error.message}</p>\r\n\t\t\t\t);\r\n\t\tif(this.props.loading)\r\n\t\t\tform= <Spinner/>;\r\n\t\tlet authRedirect= null;\r\n\t\tif(this.props.isAuthenticated)\r\n\t\t\tauthRedirect= <Redirect to= {this.props.authRedirectPath} />\r\n\t\treturn (\r\n\t\t\t<div className= {classes.login}>\r\n\t\t\t\t<h1 className= {classes.heading}>First Login, then Get Productive!</h1>\r\n            \r\n\t\t\t\t{authRedirect}\r\n\t\t\t\t<form onSubmit= {this.submitHandler}>\r\n\t\t\t\t\t{form}\r\n\t\t\t\t\t<button disabled= {!this.state.controls.email.value}\r\n\t\t\t\t\t className= {classes.btn}>Submit</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button onClick= {this.switchAuthModeHandler}\r\n\t\t\t\t\t\tclassName= {classes.btn}>\r\n\t\t\t\t\t\tSwitch to {this.state.isSignUp ? 'Sign in' : 'Sign up'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className= {classes.error}>\r\n\t\t\t\t\t{errMessage}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nconst mapDispatchToProps= dispatch =>{\r\n\treturn{\r\n\t\tonAuth: (email,password, isSignUp, userName) => dispatch(actions.auth(email,password, isSignUp,userName)),\r\n\t\tonSetRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n\t};\r\n};\r\n\r\nconst mapStateToProps= state =>{\r\n\treturn{\r\n\t\tloading: state.auth.loading,\r\n\t\terror: state.auth.error,\r\n\t\tisAuthenticated: state.auth.token != null,\r\n\t\tauthRedirectPath: state.auth.authRedirectPath\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\nimport Auxiliary from './hoc/Auxiliary';\nimport classes from './App.css';\n// import * as actions from './store/actions/index';\nimport {Route, Switch,Redirect} from 'react-router-dom';\nimport TodoList from './components/TodoList/TodoList';\nimport Login from './components/Login/Login';\nimport {connect} from 'react-redux';\n\nclass App extends Component {\n    render(){\n      let routes= (\n      <Switch>\n        <Route path= \"/\" exact component= {Login}/>\n        <Redirect to= \"/\"/>\n      </Switch>\n    );\n    if(this.props.isAuthenticated){\n      routes= (\n        <Switch>\n          {/* <Route path= \"/logout\" component= {Logout}/> */}\n          <Route path= \"/login\" component= {Login}/>\n          <Route path= \"/\" exact component= {TodoList}/>\n        </Switch>\n        );\n    };\n    return (\n      <Auxiliary>\n          <div className= {classes.Box}>\n            {routes}\n          </div>\n      </Auxiliary>\n    );\n  }\n}\nconst mapStateToProps= state=>{\n  return{\n    isAuthenticated: state.auth.token != null\n  };\n}\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState= {\r\n\ttoken: null,\r\n\tloading: false,\r\n\tuserId: null,\r\n\terror: null,\r\n\tuserName:'',\r\n\tauthRedirectPath: '/'\r\n};\r\n\r\nexport const authReducer= (state= initialState, action) =>{\r\n\tswitch(action.type){\r\n\t\tcase actionTypes.AUTH_START:\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true, error: null\r\n\t\t\t};\r\n\t\tcase actionTypes.AUTH_FAIL:\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.error,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase actionTypes.AUTH_SUCCESS:\r\n\t\t\treturn{\r\n\t\t\t\t...state, \r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.idToken,\r\n\t\t\t\tuserId: action.userId,\r\n\t\t\t\terror: null,\r\n\t\t\t\tuserName: action.userName\r\n\t\t\t};\r\n\t\tcase actionTypes.AUTH_LOGOUT:\r\n\t\t\treturn{\r\n\t\t\t\t...state, \r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tuserId: null,\r\n\t\t\t\terror: null\r\n\t\t\t};\r\n\t\tcase actionTypes.SET_AUTH_REDIRECT_PATH:\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tauthRedirectPath: action.path\r\n\t\t\t}\r\n\t\tdefault: return state;\r\n\t}\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/authReducer';\n\nconst composeEnhancers= process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null \t||compose;\nconst rootReducer= combineReducers({\n\tauth: authReducer\n});\nconst myStore= createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nconst app= (\n\t<Provider store= {myStore}>\n\t\t<BrowserRouter>\n\t\t\t<App/>\n\t\t</BrowserRouter>\n\t</Provider>\n\t);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}